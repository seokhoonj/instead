% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date.R
\name{as_date_safe}
\alias{as_date_safe}
\title{Safely coerce to Date with ambiguity checks (ISO-first)}
\usage{
as_date_safe(x)
}
\arguments{
\item{x}{character | factor | Date | POSIXt vector}
}
\value{
Date vector the same length as \code{x}
}
\description{
Vectorized date parser that accepts character, factor, Date, or POSIXt.
Supported formats:
\itemize{
\item ISO-like: "YYYY-MM-DD", "YYYY/MM/DD", "YYYYMMDD"
\item Two-digit day/month with "/" or "-": "DD/MM/YYYY" vs "MM/DD/YYYY"
(and "DD-MM-YYYY" vs "MM-DD-YYYY"); ambiguous cases error.
}
}
\details{
Rules:
\itemize{
\item Dates returned unchanged.
\item POSIXt drops time (converted via as.Date()).
\item "" treated as NA.
\item First parse ISO-like formats (fast, unambiguous), then handle 2-digit day/month.
\item Anything not parsed -> error with a short preview.
}
}
\examples{
# ISO-like formats
as_date_safe(c("2024-01-01", "20240102", "2024/01/03"))
#> [1] "2024-01-01" "2024-01-02" "2024-01-03"

\dontrun{
# Ambiguous two-digit cases raise an error
as_date_safe("01/08/2017")
#> Error: Ambiguous date(s): 01/08/2017 (could be DD/MM/YYYY or MM/DD/YYYY).
}

# Unambiguous two-digit cases are parsed
as_date_safe(c("13/02/2017", "02/13/2017"))
#> [1] "2017-02-13" "2017-02-13"

# POSIXt is allowed
as_date_safe(as.POSIXct("2024-01-07 12:34:56"))
#> [1] "2024-01-07"

# Factor input is coerced
f <- factor("2024-01-10")
as_date_safe(f)
#> [1] "2024-01-10"

\dontrun{
# Unsupported formats -> error
as_date_safe("2024.01.01")
#> Error: Unsupported date format(s): 2024.01.01.
}

}
\seealso{
\code{\link[=as_date_iso]{as_date_iso()}}
}
