% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date.R
\name{as_date_safe}
\alias{as_date_safe}
\title{Safely coerce to Date with ambiguity checks (ISO-first)}
\usage{
as_date_safe(x)
}
\arguments{
\item{x}{character | factor | Date | POSIXt vector}
}
\value{
Date vector the same length as \code{x}
}
\description{
Vectorized date parser that accepts character, factor, Date, or POSIXt.
}
\details{
\strong{Supported formats}
\itemize{
\item ISO-like dates: \code{"YYYY-MM-DD"}, \code{"YYYY/MM/DD"}, \code{"YYYYMMDD"}
\item ISO-like datetimes (time dropped): \code{"YYYY-MM-DD HH:MM:SS"}, \code{"YYYY/MM/DD HH:MM:SS"}
\item Two-digit day/month with "/" or "-":
\code{"DD/MM/YYYY"} vs \code{"MM/DD/YYYY"} (and \code{"DD-MM-YYYY"} vs \code{"MM-DD-YYYY"});
ambiguous cases error.
}

\strong{Rules}
\itemize{
\item \code{Date} inputs are returned unchanged.
\item \code{POSIXt} inputs drop the time via \code{as.Date()}.
\item Empty strings \code{""} are treated as \code{NA}.
\item Parsing order: unambiguous ISO(-like) (date or datetime) → two-digit day/month.
\item Anything not parsed → error with a short preview.
\item Datetime strings (e.g., \code{"2012-01-01 00:00:00"}, \code{"2012/01/01 00:00:00"}) are
parsed as calendar dates (time is ignored); beware that \code{as.Date()} on
\code{POSIXt} uses a timezone—set \code{tz} explicitly if needed.
}
}
\examples{
# ISO-like dates
as_date_safe(c("2024-01-01", "20240102", "2024/01/03"))
#> [1] "2024-01-01" "2024-01-02" "2024-01-03"

# ISO-like datetimes (time is dropped)
as_date_safe(c("2012-01-01 00:00:00", "2012/01/01 12:34:56"))
#> [1] "2012-01-01" "2012-01-01"

\dontrun{
# Ambiguous two-digit cases raise an error
as_date_safe("01/08/2017")
#> Error: Ambiguous date(s): 01/08/2017 (could be DD/MM/YYYY or MM/DD/YYYY).
}

# Unambiguous two-digit cases are parsed
as_date_safe(c("13/02/2017", "02/13/2017"))
#> [1] "2017-02-13" "2017-02-13"

# POSIXt is allowed (timezone may affect the calendar date)
as_date_safe(as.POSIXct("2024-01-07 00:00:00", tz = "Asia/Seoul"))
#> [1] "2024-01-07"

# Factor input is coerced
f <- factor("2024-01-10")
as_date_safe(f)
#> [1] "2024-01-10"

\dontrun{
# Unsupported formats -> error
as_date_safe("2024.01.01")
#> Error: Unsupported date format(s): 2024.01.01.
}

}
\seealso{
\code{\link[=as_date_iso]{as_date_iso()}}
}
