% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pack.R
\name{pack_left}
\alias{pack_left}
\title{Pack non-missing values to the left across multiple columns}
\usage{
pack_left(df, cols)
}
\arguments{
\item{df}{A data.frame or data.table.}

\item{cols}{Columns to pack (tidy-select compatible or a character vector).}
}
\value{
The modified object, invisibly. If \code{df} is a data.table, it is
modified by reference; if it is a data.frame, a modified copy is returned.
}
\description{
Shift non-\code{NA} values leftwards across a set of columns, replacing
the vacated positions with type-consistent \code{NA}s. Useful for
left-packing code columns (e.g., \code{kcd1}, \code{kcd2}, ...), so that
values always occupy the earliest available column.
}
\details{
Works in-place when \code{df} is a data.table. For plain data.frame,
a temporary data.table is used under the hood and the modified
object is returned (no mutation of the original).
\itemize{
\item Columns in \code{cols} are expected to share the same type when they contain
non-missing values. If a column is entirely \code{NA} (type ambiguous), it will
adopt the source column's type at the moment a non-\code{NA} value is shifted in.
\item The algorithm performs \code{(length(cols) - 1)} passes, each time moving any
available value one step to the left, until no more shifts are possible.
\item Type safety is enforced; incompatible source/destination types stop with
an informative error to prevent silent coercion.
}
}
\examples{
\dontrun{
library(data.table)

df <- data.table::data.table(
  kcd1 = c(NA, NA, NA),
  kcd2 = c("W49","S925", NA),
  kcd3 = c("S925", NA, "D12")
)
pack_left(df, c(kcd1, kcd2, kcd3))
df
#    kcd1  kcd2  kcd3
# 1:  W49  S925  <NA>
# 2: S925  <NA>  <NA>
# 3:  D12  <NA>  <NA>
}

}
