% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excel.R
\name{save_plot_wb}
\alias{save_plot_wb}
\title{Write ggplot object(s) into an existing openxlsx Workbook (stacked or placed)}
\usage{
save_plot_wb(
  plot,
  wb,
  sheet = "Plots",
  rc = c(1L, 1L),
  width = 8,
  height = 4,
  dpi = 300,
  plot_titles = NULL,
  title_size = 14,
  font_name = getOption("instead.font"),
  row_spacer = 2L,
  rows_per_inch = 5
)
}
\arguments{
\item{plot}{A ggplot object, or a non-empty list of ggplot objects.}

\item{wb}{An existing \code{openxlsx::Workbook} (e.g., from
\code{openxlsx::createWorkbook()} or \code{openxlsx::loadWorkbook()}).}

\item{sheet}{Target worksheet name. Created if it does not exist.
Default \code{"Plots"}.}

\item{rc}{Either a single length-2 numeric vector \code{c(row, col)} (to stack
plots), or a list of such vectors with the same length as \code{plot}
(to place each plot individually).}

\item{width, height}{Plot size in inches passed to \code{openxlsx::insertPlot()}.
Default \code{width = 8}, \code{height = 4}.}

\item{dpi}{Image resolution passed to \code{openxlsx::insertPlot()}. Default \code{300}.}

\item{plot_titles}{Optional character vector of titles (written \strong{above} each
plot). If \code{NULL}, \code{names(plot)} are used when available; otherwise, no title.
Length must equal \code{length(plot)} when supplied.}

\item{title_size}{Numeric font size for \code{plot_titles}. Default \code{14}.}

\item{font_name}{Font family for title text. Default \code{getOption("instead.font")}.}

\item{row_spacer}{Integer (>= 0). Number of \strong{blank rows} between stacked
plots when \code{rc} has length 1. Default \code{2L}.}

\item{rows_per_inch}{Approximate number of worksheet rows consumed by
\strong{one inch} of plot height (used only in stack mode). Default \code{5}.}
}
\value{
The modified \code{Workbook} (invisibly), suitable for chaining and for
passing to \code{openxlsx::saveWorkbook()}.
}
\description{
Inserts one or more \strong{ggplot} objects into a worksheet of an \strong{existing}
\code{openxlsx} \code{Workbook}, optionally adding a \strong{title row} above each plot,
stacking plots vertically with a configurable spacer, and controlling plot
size/resolution. This function \strong{does not save} the workbook; it returns the
modified \code{Workbook} object (use \code{openxlsx::saveWorkbook()} to write to disk).
}
\details{
If \code{rc} has \strong{length 1}, the first plot is placed at that \verb{(row, col)} and
subsequent plots are placed \strong{below it} with \code{row_spacer} blank rows in
between. The next start row is approximated as:

\preformatted{
start_row_next = start_row
               + (title_present ? 1 : 0)
               + ceiling(height * rows_per_inch)
               + row_spacer
}

If \code{rc} has the same length as \code{plot}, each plot is placed at its own
specified top-left cell (no auto-stacking).
\itemize{
\item Title rows are written via \code{write_cell()} (bold, left-aligned).
\item Plots are inserted via \code{openxlsx::insertPlot()}. The function prints each
ggplot immediately before insertion so the correct plot is captured as the
\strong{last drawn} plot on the active device.
\item Sheet is created on demand if it does not exist.
}
}
\examples{
\dontrun{
library(ggplot2)
library(openxlsx)

p1 <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
p2 <- ggplot(mtcars, aes(hp, qsec)) + geom_point()

# Stack two plots starting at A1 with spacing and titles
wb <- openxlsx::createWorkbook()
save_plot_wb(
  plot        = list("MPG vs WT" = p1, "HP vs QSEC" = p2),
  wb          = wb,
  sheet       = "Plots",
  rc          = c(1L, 1L),
  title_size  = 16,
  width = 8, height = 4, dpi = 300,
  row_spacer  = 2L, rows_per_inch = 5
)
openxlsx::saveWorkbook(wb, "plots_stacked.xlsx", overwrite = TRUE)
}

}
\seealso{
\code{\link[=save_plot_xlsx]{save_plot_xlsx()}}, \code{\link[=save_plot_wb_split]{save_plot_wb_split()}}, \code{\link[openxlsx:insertPlot]{openxlsx::insertPlot()}}
}
