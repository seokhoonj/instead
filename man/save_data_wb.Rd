% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excel.R
\name{save_data_wb}
\alias{save_data_wb}
\title{Write one or more tables into an existing openxlsx Workbook (stacked or placed)}
\usage{
save_data_wb(
  data,
  wb,
  sheet = "Data",
  rc = list(c(1L, 1L)),
  row_spacer = 2L,
  data_titles = NULL,
  title_size = 14,
  row_names = FALSE,
  font_name = getOption("instead.font"),
  font_size = 11,
  fg_fill = "#E6E6E7",
  border_color = "#000000",
  widths = 8.43,
  auto_width = TRUE,
  width_scope = c("global_max", "per_table"),
  num_fmt = NULL
)
}
\arguments{
\item{data}{A data.frame, matrix, or a list of them. Matrices are coerced
to data.frames. A single object is treated as a length-1 list.}

\item{wb}{An existing \code{openxlsx} \code{Workbook} (e.g., from
\code{openxlsx::createWorkbook()} or \code{openxlsx::loadWorkbook()}).}

\item{sheet}{Target worksheet name. Created if it does not exist. Default \code{"Data"}.}

\item{rc}{Either a single length-2 numeric vector \code{c(row, col)} (to stack
tables), or a list of such vectors with the same length as \code{data}
(to place each table individually).}

\item{row_spacer}{Integer (>= 0). Number of \strong{blank rows} between stacked
tables when \code{rc} has length 1. Default \code{2L}.}

\item{data_titles}{Optional character vector of titles, written \strong{above}
each table when provided. If \code{NULL}, \code{names(data)} are used when available;
otherwise no title is written for that table.}

\item{title_size}{Numeric font size for \code{data_titles}. Default \code{14}.}

\item{row_names}{Logical; forwarded to \code{write_data()} to include row names.
Default \code{FALSE}.}

\item{font_name, font_size, fg_fill, border_color, widths}{Styling parameters
forwarded to \code{write_data()}. \code{widths} is used only when \code{auto_width = FALSE}.}

\item{auto_width}{Logical. If \code{TRUE}, compute per-column widths from the
underlying data (and optional row-name column) and call
\code{openxlsx::setColWidths()} for \strong{data columns only} (title row is ignored).
Default \code{TRUE}.}

\item{width_scope}{One of \code{"global_max"} or \code{"per_table"}. When \code{auto_width = TRUE}:
\itemize{
\item \code{"per_table"} sets widths independently for each table.
\item \code{"global_max"} first scans all tables that \emph{start at the same column},
takes the \strong{element-wise maximum} width across them, then applies that
once—so later tables don’t shrink widths set by earlier ones.
Default \code{"global_max"}.
}}

\item{num_fmt}{Optional numeric format(s) applied to \strong{data cells} (headers
excluded). Either a single character (applied to all numeric columns),
or a named character vector/list mapping column names to formats
(unknown names are ignored).}
}
\value{
The modified \code{Workbook} (invisibly), suitable for chaining and for
passing to \code{openxlsx::saveWorkbook()}.
}
\description{
Inserts one or more rectangular tables into a worksheet of an \strong{existing}
\code{openxlsx} workbook, optionally adding a \strong{title row} above each table,
stacking tables vertically with a configurable spacer, and auto-sizing
data columns. This function \strong{does not save} the workbook to disk; it
returns the modified \code{Workbook} object (use \code{openxlsx::saveWorkbook()}).
}
\details{
If \code{rc} has \strong{length 1}, the first table is written at that \verb{(row, col)} and
subsequent tables are placed \strong{below it} with \code{row_spacer} blank rows in between.
If \code{rc} has the same length as \code{data}, each table is written at its own
specified top-left cell (no auto-stacking).
\itemize{
\item Titles are written via \code{write_cell()} (bold, left-aligned by default).
\item Tables are written via \code{write_data()} (header/body/footer borders, number
formats, etc.).
\item Column widths are set relative to the table’s starting column. If
\code{row_names = TRUE}, the row-name column is included in width calculation.
\item This function modifies \code{wb} \strong{in place} and returns it (invisibly).
Saving is up to the caller.
}
}
\examples{
\dontrun{
library(openxlsx)

wb <- openxlsx::createWorkbook()

# Write two tables stacked starting at A1, with titles and unified widths
save_data_wb(
  data        = list(iris_head = head(iris), mtcars_head = head(mtcars)),
  wb          = wb,
  sheet       = "Summary",
  rc          = list(c(1, 1)),          # stack from A1
  row_spacer  = 2L,
  data_titles = c("iris (head)", "mtcars (head)"),
  auto_width  = TRUE,
  width_scope = "global_max"
)
openxlsx::saveWorkbook(wb, "summary.xlsx", overwrite = TRUE)

# Place at specific cells (no stacking)
wb2 <- openxlsx::createWorkbook()
save_data_wb(
  data        = list(A = head(iris), B = head(mtcars)),
  wb          = wb2,
  sheet       = "Placed",
  rc          = list(c(1, 1), c(1, 10)),  # A1 and J1
  auto_width  = TRUE,
  width_scope = "per_table"
)
openxlsx::saveWorkbook(wb2, "placed.xlsx", overwrite = TRUE)
}

}
\seealso{
\code{\link[=save_data_xlsx]{save_data_xlsx()}}, \code{\link[=write_data]{write_data()}}, \code{\link[=write_cell]{write_cell()}}
}
