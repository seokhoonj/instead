% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date.R
\name{split_stay_by_date}
\alias{split_stay_by_date}
\title{Split stay intervals by cut dates}
\usage{
split_stay_by_date(df, from_var, to_var, dates, all = TRUE, verbose = TRUE)
}
\arguments{
\item{df}{A data.frame or data.table containing stay intervals.}

\item{from_var}{Column specifying the start date of the stay.
Can be provided unquoted.}

\item{to_var}{Column specifying the end date of the stay.
Can be provided unquoted.}

\item{dates}{A vector of Date objects. Each date is used as a split
point if it falls strictly inside an interval (\verb{from < d <= to}).}

\item{all}{Logical; if \code{TRUE} (default), keeps rows without any splits
alongside split rows. If \code{FALSE}, only the split pieces are returned.}

\item{verbose}{Logical; if \code{TRUE} (default), prints progress messages
showing how many rows were affected at each split and a final summary.}
}
\value{
A data.table with the same columns as \code{df}, but possibly with
more rows due to interval splitting. The original class of \code{df} is
preserved if wrapped by \code{\link[=ensure_dt_env]{ensure_dt_env()}}.
}
\description{
Splits rows of a data frame into smaller intervals whenever a given
set of split dates falls within the \verb{[from, to]} range.
Each affected row is divided into two intervals:
\itemize{
\item Left interval: \verb{[from, split_date - 1]}
\item Right interval: \verb{[split_date, to]}
}
}
\details{
Useful for scenarios such as hospitalization episodes or claim periods,
where intervals need to be aligned with administrative cut-off dates.
}
\examples{
\donttest{
df <- data.frame(
  id   = 1:3,
  from = as.Date(c("2024-01-01","2024-01-10","2024-01-20")),
  to   = as.Date(c("2024-01-15","2024-01-20","2024-01-25"))
)

# Split stays at Jan 5 and Jan 18
split_stay_by_date(df, from, to, dates = as.Date(c("2024-01-05","2024-01-18")))
}

}
