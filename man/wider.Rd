% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/longer.R
\name{wider}
\alias{wider}
\alias{wider.data.frame}
\alias{wider.data.table}
\title{Wider (S3 generic)}
\usage{
wider(x, ...)

\method{wider}{data.frame}(
  x,
  row_vars,
  col_vars,
  value_var,
  fun = length,
  fill = NA,
  drop = TRUE,
  ...
)

\method{wider}{data.table}(
  x,
  row_vars,
  col_vars,
  value_var,
  fun = length,
  fill = NA,
  drop = TRUE,
  ...
)
}
\arguments{
\item{x}{A \code{data.table}.}

\item{...}{Additional arguments forwarded to \code{data.table::dcast()}. If
\code{row.vars} / \code{col.vars} / \code{value.var} are provided here, they are used
when the NSE arguments are missing.}

\item{row_vars}{Columns forming the row id(s). Supports unquoted names,
character vectors, or numeric indices.}

\item{col_vars}{Columns forming the column id(s). Supports unquoted names,
character vectors, or numeric indices.}

\item{value_var}{Measure column(s) to spread across columns. Supports
unquoted names, character vectors, or numeric indices. Multiple columns
are allowed (passed to \code{value.var}).}

\item{fun}{Aggregation function for duplicate cells (passed to
\code{fun.aggregate}). Must return a length-1 result. Default is \code{length}.}

\item{fill}{Value to fill for absent combinations (passed to \code{fill}).}

\item{drop}{Logical; drop unused factor levels in the cast (passed to \code{drop}).}
}
\value{
A wide-form object as defined by the dispatched method.

A wide-form table with the original outer class restored.

A wide-form \code{data.table}.
}
\description{
A lightweight S3 generic for reshaping objects to wide form,
conceptually similar to \code{data.table::dcast()}. Concrete methods may
delegate to \code{data.table::dcast()} or provide class-specific behavior.

\code{wider.data.frame()} reshapes a \code{data.frame} from long to wide format
using \code{data.table::dcast()} internally.

\code{wider.data.table()} provides a convenient NSE interface to
\code{data.table::dcast()}, supporting unquoted column selection for
\code{row_vars}, \code{col_vars}, and \code{value_var}. The \code{row.vars} / \code{col.vars} /
\code{value.var} argument style is also accepted via \code{...}.
}
\details{
It supports \strong{NSE} for \code{row_vars}, \code{col_vars}, and \code{value_var}, allowing
unquoted column names (e.g. \code{c(id1, id2)}). For compatibility, the
\code{data.table}-style names \code{row.vars}, \code{col.vars}, \code{value.var} are also
accepted via \code{...}.

The input is coerced to a \code{data.table}, reshaped, and the original
outer class (e.g. tibble) is restored on return.

Column symbols are resolved via \code{instead::capture_names()}. A dcast
formula is constructed as \code{row_vars ~ col_vars} and passed along with
\code{value.var = value_var} and \code{fun.aggregate = fun}.

Column symbols are resolved via \code{instead::capture_names()} and combined into
a formula \code{row_vars ~ col_vars} for \code{data.table::dcast()}.
}
\examples{
\dontrun{
# From long to wide:
#   rows: cyl
#   cols: gear
#   values: mpg (mean over duplicates)
dt <- data.table::as.data.table(mtcars)
wider(dt, row_vars = cyl, col_vars = gear, value_var = mpg, fun = mean)
}

\dontrun{
df <- as.data.frame(mtcars)
# Mean mpg per (cyl Ã— gear)
wider.data.frame(df, row_vars = cyl, col_vars = gear, value_var = mpg, fun = mean)

# Multiple value columns:
wider.data.frame(df, row_vars = cyl, col_vars = gear, value_var = c(mpg, wt), fun = mean)
}

\dontrun{
dt <- data.table::as.data.table(mtcars)

# Unquoted NSE columns
wider.data.table(dt, row_vars = c(cyl, vs), col_vars = gear,
                 value_var = mpg, fun = mean)

# Multiple value columns
wider.data.table(dt, row_vars = cyl, col_vars = gear,
                 value_var = c(mpg, wt), fun = mean)

# Quoted (standard) style
wider.data.table(dt, row_vars = c("cyl","vs"), col_vars = "gear",
                 value_var = "mpg", fun = mean, fill = NA)
}

}
\seealso{
\code{\link[data.table:dcast.data.table]{data.table::dcast()}}, \code{\link[=longer]{longer()}}

\code{\link[data.table:dcast.data.table]{data.table::dcast()}}, \code{\link[=longer]{longer()}}
}
