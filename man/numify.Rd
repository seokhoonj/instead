% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{numify}
\alias{numify}
\title{Convert columns to numeric (in-place for data.table)}
\usage{
numify(df, cols, suppress_warnings = FALSE)
}
\arguments{
\item{df}{A data.frame, tibble, or data.table containing the columns to convert.}

\item{cols}{Character vector of column names to convert to numeric. If missing
or empty, all \code{integer}-type columns are selected automatically.}

\item{suppress_warnings}{Logical; if \code{TRUE}, suppresses warnings such as
\code{"NAs introduced by coercion"}. Default is \code{FALSE}.}
}
\value{
\itemize{
\item If \code{df} is a data.table: the same object, modified in place.
\item If \code{df} is a data.frame or tibble: a new object of the original class,
with specified (or auto-selected) columns converted to numeric.
}
}
\description{
Efficiently convert selected columns of a data frame, tibble, or
data.table to numeric type.
If the input is a data.table, the conversion is performed \strong{in place}
(no copy).
If the input is a regular data.frame or tibble, a shallow copy is made
and the result is automatically restored to the original class.
}
\details{
If \code{cols} is not provided (or is empty), all columns of type \code{integer}
are automatically selected for conversion.

This function uses \code{\link[data.table:assign]{data.table::set()}} for direct column replacement,
minimizing memory use and avoiding full table copies.
It is internally wrapped by \code{ensure_dt_env()} to preserve the input's
original class and ensure safe restoration for non-data.table inputs.
}
\examples{
\dontrun{
library(data.table)
DT <- data.table(a = 1:3, b = c("4", "5", "x"))

# Auto-select integer columns (here: "a") and convert in place
numify(DT)
str(DT)

# Explicit columns
df <- data.frame(a = c("1", "2"), b = c("3", "x"))
df2 <- numify(df, "b")
str(df2)
}

}
